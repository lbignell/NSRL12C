14/11/9
- Copied contents from NSRL13C.
- The intent of this simulation is to replicate the experiment carried out in
  2012 with the reflective and unreflective tubs.

Things to change:

Geometry: Hodoscopes, detectors, detector wall properties of reflective tub.
  	  I can use technical drawings but I may still need to rely on David.
Physics: Should not change.
Sensitive Detectors: I'll need to make 2 LS volumes sensitive, and assign the
	  	     PMTup and PMT down SDs to the new PMTs.
Run Action: Probably needs changing to reflect new SDs, etc.
Primary Generator: Need to reproduce the beam, and have a user-settable variable
		   that modifies the height of the beam entry point.

- Created PGAMessenger class to handle adjusting the height of the mean beam
  position. Tested working.
- I'm on the plane at the moment, so I'll need to wait until I have internet to
  get the technical drawings and can implement the geometry changes.

14-12-4
- There are some notes pasted on the back of notebook, page 29. These spell out
  the distances between the hodoscopes/tubs. The notes also indicate that the
  beam hit the centre of the tubs.
- I should git this code to both keep track of changes and make it accessible 
  between my various machines...

14-12-5
- Status to date:
  - Completed the geometry section of DetectorConstruction.
  - Put code into a Git repository and pushed to GitHub.

- Testing teflon tub optical properties. The optical photons need to traverse
  the white teflon if Cerenkov light is to be produced in it. So the way that I
  set up the optical interface must change.
  --> In my previous code I just had a uniform reflectance from the box that was
      implemented in SensitiveDetector.
  --> I can still do this for the black teflon box.
  --> However for the white one I must use the Geant4 optical surface models.
      What seems to work is having a ground dielectric-dielectric interface on
      the liquid/teflon barrier, and a ground dielectric-metal interface on the
      teflon/air barrier. I can then adjust the reflectance by modifying the
      attenuation length in the PFTE.
      --> I've implemented this.

14-12-9
- To do:
  - Modify my RunAction to collect the following info:*DONE*
    - Incident primary kinetic energy for T1/T2.
    - Edep in T1/T2/H1/H2/H3.
    - Vertex X-Y of primary (implement in T1).
    - Whether the primary particle entered T1/T2/H1/H2/H3.
    - Total # opt photons in T1/T2.
    - Opt photon energy on production; T1/T2.
    - Opt photon creator process; T1/T2.
    - Opt photon energy at PMT (+ measured); winT1/winT2.
    - Num Opt photons at PMT (+ measured); winT1/winT2.
  - Propagate these changes through the program. *DONE*
  - Recalculate the photon position on the PC surface for the PMTwin class. I
    should also enable setting the T1 and T2 PMT effective areas as different
    values.*DONE*
  - Modify the PGA to reflect the beam profile used in NSRL12C.
    -> I can't find any relevant docs. I'll ask David when he's back from 
       holidays. I'll proceed for now assuming the parameters are the same as
       for NSRL13A.
  - Add Rayleigh scattering length to teflon.*DONE*

- Making the Rayleigh scattering length too short causes excessively long
  compute times. I can improve this situation by:
  - Modify the Rayleigh scattering length to a longer value to make things
    easier.
  - Make the attenuation length a bit shorter (if it actually is short).
  - Once I've got the optical properties sorted; remove the G4OpticalSurface
    on tub 1.
  - I can maybe gain a few-fold speedup by killing some fraction of the optical
    photons and increasing the PMT QE by a corresponding fraction.
  - Figure out how to run multithreaded. Running on the RACF may then work.

2014-12-10
- Kinetic energy sometimes (~% level) appears to be higher than the incident 
  particle energy! It is very obviously multiple particles being counted at
  once. I should check my initialization for this. The other quantities don't
  appear to exhibit the same error (thankfully). -> Mostly fixed, a full fix
  would require more effort than I can justify. Results should be correct for
  >99% of events and no other quantities are affected.
- NumPhotons_PMTT2 appears to have a type error. I will be getting this when I
  call it from SensitiveDetector, so I should check that call and the method
  that is called.
  -> Should be fixed now. Is not in fact. I need to look into this further...

- Implementing more realistic teflon optical properties; based on this thesis:
  https://smartech.gatech.edu/bitstream/handle/1853/22686/li_qinghe_200805_mast.pdf
  -> Simulation runs even slower: 1 evt = 2:39.522, 2 evts = 5:38.081.
  -> A single event takes > 1 minute!

- To speed things up; I'm going to implement a simpler optical model.
  -> I'll use the measured attenuation coefficient of ~1m, and NO scatter.
  -> I'll use the nominal teflon refractive index of 1.36.
  -> I'll not model Rayleigh scatter.
  -> I'll use the G4 optical surface type as a ground (diffusive scatter) metal
     (perfect scatter) between the teflon and the air interface.
- The above measures will allow Ckov production in the teflon and semi-realistic
  scattering of light from teflon. It will allow the Ckov produced in the teflon
  to directly illuminate the PMT, but this can happen in the water anyway.
  -> New run time: 2 evts = 13.727, 1 evt = 9.393 -> 4 secs/evt

- Results:
  - TUB 1
  -> The 475 MeV data agree surprisingly well with the measured results for a
     first pass (~10.5 PE measured (RMS 5.7) vs 13.3 PE simulated (RMS 6.2)).
  -> The 2 GeV results are further off: 204 PE (RMS 23.7) measured, 346 PE (RMS
     32.9) simulated. At least the simulated results exhibit greater light yield
     than the measured results at both energies in T1.
  - TUB 2
  -> 475 MeV data are both consistent with ~ <single PE.
  -> 2GeV: 3.5 PE (5.1 RMS) measured, 2.2 PE (3.3 RMS) simulated. Not much to go
     on but it appears that the black teflon may need some reflectance...

- To make the code more portable; I've made a requirement that the location of
  the data files be set using the $DATAFILES environment variable.

2014-12-11
- Modified PGA so that the beam is still sampled from the same distribution but
  only accepts events that are within 1 mm of the front hodoscope.
- Running a scan over the beam height relative to the centre of the tub.
- Fixed a bug that prevented me changing the particle gun energy (in 
  PrimaryGeneratorAction::GeneratePrimaries. A side-effect is that there is no
  longer any spread in the beam energy. I don't think this is consequential.

- As the simulation is quite slow; I'm looking into the multithreading. A naive
  use of G4MTRunManager gives an error when building the PhysicsList. The error
  is: 
  "Size of G4ProcessVector is inconsistent between master and worker threads
   for the particle <anti_He3>. size of G4ProcessVector for worker thread is
   19 while masther thread is 9."
  Removing hadronic processes from the physics list removes this error, but that
  is not a satisfactory solution. The MT migration page says you should be sure
  to define G4GenericIon in the particle definition; however doing this does not
  fix the problem.
  There are also several changes to my user action classes (PGA, DC, SD, maybe
  others, see the website:
  https://twiki.cern.ch/twiki/bin/view/Geant4/QuickMigrationGuideForGeant4V10
  In particular (not on page above), I'll need to use a thread lock when I pass
  data from the sensitive detector to the run action at the end of event, as
  RunAction is shared between threads and sensitive detectors are thread-local.
  -> I should do this at some point; but for now I'll content myself with just
     running single threaded to get some quick results.

- Fixed an annoying bug in my DetectorMessenger that restricted the beam height
  to >0.

- Running with 2 GeV and 475 MeV data for several beam heights (-5 cm to + 5 cm
  in 1 cm steps).
  -> Results are actually in pretty good agreement for much of the range;
     probably because of the different reflective model.
     - T1: 2GeV measured 204 PE, best sim fit @ ~2 cm (+/- a few cm, identical
       	   within uncerts. 475 MeV measured 10.2 PE, max simulated 6.4 PE. This 
	   is much worse agreement than previously; and may be due to the lack
	   of energy spread (I turned that off). TO DO: TURN ON ENERGY SPREAD
	   IN 475 MEV DATA AND SEE IF IT MAKES A DIFFERENCE.
     - T2: 2 GeV measured 3.5 PE; strong variation with beam height for 
       	   simulation; best fit at 2 cm (not 3, maybe 1; 2.9 PE @2cm). 475 MeV
	   was consistent with <1 PE, simulation is same (mean = 0.15).

- Going to do higher resolution run overnight for 2 GeV and 475 MeV.
  -> Changed PGA so that the beam now has to fall exactly within the hodoscope
     area to make more efficient.
  -> Running for 1K events per height, from -0.5cm, to 4 cm, 0.5 cm increments.

2014-12-12
- Got decent agreement with the water; except for the 475 MeV data.
  - I tried 476 MeV data (~ how much the beam may be off by) and the discrepancy
    remains. I don't know why the agreement is so poor; perhaps because of the
    handling of the reflectance in the teflon tub?

- Pressed on to look at WbLS; 1% scintillator:
  - 475 MeV, T1: Measured 111 PE; simulated 152 PE.
  - 475 MeV, T2: Measured 15.7 PE (Gaussian-fitted), sim 15.3 PE (also fitted).
  - 2 GeV, T1: Measured 246 PE; simulated 326.6 PE.
  - 2 GeV, T2: Measured 27.6 PE (Gaussian-fitted); sim 27.8 PE (also fitted).
  - 210 MeV, T1: Measured 180 PE; simulated 238 PE.
  - 210 MeV, T2: Meas 28.2 PE (Gaussian-fitted), sim 29.7 (fitted) or 29.8 PE.

  -> T2 results agree quite well with the measurements (within 5%). The T1
     results give poor agreement that is very consistent (each 32% off).

- Going to try running o'night with 0.4% scintillator.
  -> I've changed the WbLS fraction and scaled the scintillation yield.
  -> Running 10K events; should take 25 hrs.

2014-12-13
- 0.4% scintillator results:
  - 2 GeV, T1: measured 220 PE, simulated 267 PE.
  - 2 GeV, T2: measured 18.9 PE, simulated 23.3 PE.
  - 475 MeV, T1: measured 42.1, simulated 71.1 PE.
  - 475 MeV, T2: measured 4.08 PE, simulated 7.13 PE.
  - The above results are rubbish; just realised that I made the WbLS fraction
    at 0.04%, rather than 0.4%!!!

- Also scaled the WLS absorption length by WbLSFraction/0.0099, running again.

2014-12-15
- Running with REAL 0.4% scintillator, scaled abs length...
  - 2 GeV, T1: measured 221 PE, simulated 142 PE.
  - 2 GeV, T2: measured 18.9 PE, simulated 21.3 PE.
  - 475 MeV, T1: measured 42.1, simulated 37.8 PE.
  - 475 MeV, T2: measured 4.08 PE, simulated 6.52 PE.
  - 210 MeV, T1: measured 36.6 PE, simulated 50.6 PE.
  - 210 MeV, T2: measured 5.25 PE, simulated 11.94 PE.

2014-12-16
- To Do:
  - Make scintillator fraction settable using DetectorMessenger.
    -> Done: Shares same limitations as setting water/WbLS fraction (see below).
  - Make liquid material water/WbLS, user-settable with DetectorMessenger.
    -> Done: set with /CustomCommands/det/isWater true (or false). Default is
       	     water. Need to run /CustomCommands/det/update. Actually, NO, it
	     does NOT work! It appears to Seg Fault because the physics tables,
	     etc. aren't being rebuilt... It works OK if it is used at the start
	     of a run; before tables, etc. are built.
	     On reflection; I think being restricted to setting the material at
	     the start of a session isn't so bad that I need to spend more time
	     on fixing this...
  - Paralellise code, get it to work with hadronic interactions turned on.

2014-12-17
- The problems with seg-faulting upon changing the materials have been worked
  around; I've just written a bash script to change the parameters in the
  macro that calls Geant4, and making a new session for each parameter change.
  -> Works...

2014-12-18
- Figured out why the multithreading was stuffing up on hadronic physics; the
  PhysicsList appears to  be a shared-thread class, except for
  ConstructProcess() and ConstructParticle() methods, which are local.
  I was using a vector to store the hadronic processes but wasn't clearing it
  between instanciations. Clearing it prior to (and following) filling it fixes
  the crash on this process, moving the crash to PrimaryGeneratorAction (for
  which I can just follow the instructions on the migration wiki).
  -> Actually, I've realised there may be some race condition between threads
     trying to access/clear the process vector at the same time; I'm just using
     local variables for everything now...

- OK, I figured it out after banging my head against the keyboard for a bit:
  -> Need a mutex lock when I call RunAction::TallyEvtData, to avoid overwriting
     the branch variables prior to filling the tree.
  -> I also need to make the root file, tree, and all branch variables static;
     so that 1. the file is not overwritten, 2. only 1 tree is written to file,
     and 3. the addresses of the branches stay constant across threads.

- Running multithreaded on my Ubuntu desktop definitely shows both cores working
  on the simulation. I can run 1000x events without any hiccups.

- Testing how the code running time on RACF vs # of cores.
  -> Discovered bug: when I access the ExEmData.root file; I need to make the
     code threadsafe, to avoid multiple threads reading the file at the same
     time (I get an occasional seg fault from this).

- Code breaks when I do /CustomCommands/det/update.
  I'll look into this tomorrow...

2014-12-19
- Fixing the error when the geometry is updated...
  -> The problem is that when the geometry is updated, the Sensitive Detector
     manager already has the current SDs registered. I then reinitialize the
     geometry and try to add some more SDs with the same name, causing a G4 to
     throw an error or a seg fault; depending on how the geometry is
     reinitialized.
  -> My workaround:
     - Get the SDmanager pointer and de-activate all of the current SDs.
     - Reinitialize the geometry.
  -> Important points/limitations:
     - This approach only works if DetectorConstruction::UpdateGeometry() is
       called from the pre-init state; so I've removed the run manager's
       initialize command from main().
     - Because of the above point; all of my macros must do their geometry
       changes, then call /run/initialize, prior to any running.
     - I still can't run then make a change without seg-faulting.
     - Based on my googling around about this issue; updating the geometry is 
       not one of Geant4's strong suits (especially if there is a change to
       materials involved). There may be a solution in individually modifying
       the physical/logical volume pointers; but at the moment it is working and
       will do me...

- To Do:
  - Measure absorption lengths of 0.4% LS and pure LS (or maybe use DB LS?).
    ->DONE.
  - Modify DetectorConstruction and DetectorMessenger to make a switch for
    changing between the measured absorption data sets, instead of just scaling.
    ->This actually didn't require a DetectorMessenger modification; I just 
      check whether the WbLS fraction used is 100%, 1%, or 0.4%, and run it with
      the data if I have it, otherwise I scale from 1% WbLS.
  - A reminder about the fundamental limitation of my model:
    I'm bundling WbLS absorption and scattering in together as a single WLS
    cross-section! This means that the portion of photons that would be
    scattered are instead wavelength shifted (with some QY). This apparently
    hasn't had a big effect on the results to date, but it may be one reason why
    the white tub, for instance, doesn't agree very well. (Though I can't really
    claim that while I'm getting poor ageement for the water).

2014-12-23
- Added a lock on the ROOT file readout, because I'm getting seg faults at
  around that point in my program, hopefully it will stop them...

- Added another change to DetectorConstruction: if the WbLS fraction == 1 (ie.
  pure LS), I declare the WbLS material as having only one component (LS) rather
  than 2.

- Running pure LS takes a VERY long time; I'm considering turning off the T1
  simulation of optical photons in favour of being not slow!
  - To give some idea of how slow; running 10 events in paralell across 10 cores
    takes about 10 minutes! (The first event seemed to finish after ~5 mins, the
    last one finished after ~10 mins). This means that to run 1000 events; it
    would take ~ 5 days, even using 10 cores!
    -> That was only for 475 MeV protons!!

- Had a look at using the cluster to access more cores.
  - The cluster uses condor (same as ANSTO's cluster IIRC, at least it seems
    familiar).
    -> I have problems getting the test script to execute; the node reports not
       being able to find /data5/lbne/lbignell/github/NSRL12C/NSRL12C-build
       Possibly the NSRL12C is not NFS? The default location of the output
       is to /experiment/u/user...
  - I may come back to this if I need to but for now I'll give it a rest; using
    12 of the test node's 16 cores should suffice for all but the pure LS -- I
    may be able to get away with turning off the PTFE reflectance in T1 for that
    simulation...

2014-12-24
- Testing the output from the multithreaded code reveals that it does NOT work
  as expected. There are way too many photons.
  -> My guess is that this is because of the way the data are written to the
     root file; or in the way the data are collected from the other SDs (in 
     which case I may be able to fix it by making my root file output extern).

- Whatever the cause of the cock up, I don't think it's worth the time to chase 
  down the source of the problem. I'll just run it without multithreading.
  (It will be slow but I have all Christmas!).

- Reverting back the changes to incorporate 0.4% and 100% WbLS data.

2014-12-30
- Running 100 evt test; over all % LS and energies; the script ran successfully.
  However, the results are a bit different from those that I originially got!
  -> Running RunHeights.mac again; the results broadly agree.
  -> On closer inspection it appears that the reproduced simulation isn't that
     bad (I was suspicious because all 3 values were higher, but they don't
     appear to be statistically significant.

- 0.4% WbLS gives values that are too high (even higher than just using a scaled
  value).
  -> 2 GeV: <# PE> = 25.4 (using measured absorbance and scaled light yield,
       	       	     verus 21.3 with just scaled light yield (measured 18.9)).
  -> 475 MeV: <# PE> = 8.1 (meas + scaled), 6.5 (scaled + scaled), 4.1 (data).
  -> 210 MeV: <# PE> = 14.3 (meas+scaled), 11.9 (scaled+scaled), 5.3 (data).


2015-1-3
- Made changes:
  - Modify T1 reflectance so that it is similar to T2 (diffuse metal reflector
    with reflection probability implemented in SensitiveDetector).
    -> Setting with an initial reflectance of 0.7; <# PE> @ 475 MeV water is way
       too low (~1 PE, data = 10.2 PE).
    -> Refl = 0.9; <# PE>(475 MeV water) = 2.
    -> Refl = 0.99; <# PE>(475 MeV water) = 4.1
    -> Refl = 0.999; <# PE>(475 MeV water) = 5.9
    -> Refl = 1; <# PE>(475 MeV water) = 6.4
    -> Clearly, I can't get it to agree using this model...

  - Trying to tune using the 1% data as David suggested (Data = 115 PE):
    -> Refl = 1; <# PE>(475 MeV, 1% WbLS) = 162 PE.
    -> Refl = 0.9; <# PE>(475 MeV, 1% WbLS) = 101 PE.
    -> Refl = 0.95; <# PE>(475 MeV, 1% WbLS) = 124 PE.
    -> Refl = 0.925; <# PE>(475 MeV, 1% WbLS) = 113 PE.
       	      	     <# PE>(210 MeV, 1% WbLS) = 167 PE (Data = 180 PE).
		     <# PE>(2 GeV, 1% WbLS) = 245 PE (Data = 246 PE).
		     Good enough for me!

- Going to run for 10K evts per run using this setting.

2015-1-5
- Running pure LS, turned off front tub's optical properties as T1 is inaccurate
  and slows down the simulation.

- Results:
  T1:
  2 GeV, 1% WbLS, T1: <#PE>(Meas) = 246, <#PE>(Sim) = 248.
  475 MeV, 1% WbLS, T1: <#PE>(Meas) = 117, <#PE>(Sim) = 112 (Fits 1 proton peak)
  210 MeV, 1% WbLS, T1: <#PE>(Meas) = 179, <#PE>(Sim) = 173.
  2 GeV, 0.4% WbLS, T1: <#PE>(Meas) = 221, <#PE>(Sim) = 297.
  475 MeV, 0.4% WbLS, T1: <#PE>(Meas) = 42.0, <#PE>(Sim) = 75.9.
  210 MeV, 0.4% WbLS, T1: <#PE>(Meas) = 41.8, <#PE>(Sim) = 102.
  T2:
  2 GeV, water, T2: <#PE>(Meas) = 3.24, <#PE>(Sim) = 3.8.
  2 GeV, 1% WbLS, T2: <#PE>(Meas) = 28.2, <#PE>(Sim) = 27.2 (fitted)
  475 MeV, 1% WbLS, T2: <#PE>(Meas) = 15.7, <#PE>(Sim) = 15.2 (fitted)
  210 MeV, 1% WbLS, T2: <#PE>(Meas) = 28.35, <#PE>(Sim) = 33.5 (fitted)
  2 GeV, 0.4% WbLS, T2: <#PE>(Meas) = 17.2, <#PE>(Sim) = 20.0 (fitted)
  475 MeV, 0.4% WbLS, T2: <#PE>(Meas) = 4.1, <#PE>(Sim) = 7.2 (NOT fitted).
  210 MeV, 0.4% WbLS, T2: <#PE>(Meas) = 5.3, <#PE>(Sim) = 13.8 (NOT fitted)
  2 GeV, Pure LS, T2: <#PE>(Meas) = 643, <#PE>(Sim) = 810 (fitted)
  475 MeV, Pure LS, T2: <#PE>(Meas) = 1004, <#PE>(Sim) = 1163 (fitted)
  210 MeV, Pure LS, T2: <#PE>(Meas) = 2677, <#PE>(Sim) = 3196 (fitted)

2015-1-6
- Making more modifications to the simulation:
  - Get the total path length of each detected photon.->Done.
  - Get the origin material of each detected photon.->Done.

- Testing to see that above changes work has revealed that fully half of the
  photons in T2 are generated in the tub! I need to turn off the optical
  properties of the black teflon!!
  -> Done. Re-running a beam height scan reveals that the most appropriate
     height occurs at ~1.5 cm relative to the centre of the tub.
  -> I need to re-run my jobs to see what effect the beam height change has had
     on T2.
  T2, 1.5 cm Beam Height, fixed black teflon:
  2 GeV, water, T2: <#PE>(Meas) = 3.24, <#PE>(Sim) = 3.31. (excl 0 PE from avg).
  2 GeV, 1% WbLS, T2: <#PE>(Meas) = 28.2, <#PE>(Sim) = 24.4 (fitted)
  475 MeV, 1% WbLS, T2: <#PE>(Meas) = 15.7, <#PE>(Sim) = 13.7 (fitted)
  210 MeV, 1% WbLS, T2: <#PE>(Meas) = 28.35, <#PE>(Sim) = 32.7 (fitted)
  2 GeV, 0.4% WbLS, T2: <#PE>(Meas) = 17.2, <#PE>(Sim) = 18.3 (fitted)
  475 MeV, 0.4% WbLS, T2: <#PE>(Meas) = 4.1, <#PE>(Sim) = 5.6 (sim fitted).
  210 MeV, 0.4% WbLS, T2: <#PE>(Meas) = 5.3, <#PE>(Sim) = 12.9 (sim fitted)
  2 GeV, Pure LS, T2: <#PE>(Meas) = 643, <#PE>(Sim) =  776 (fitted)
  475 MeV, Pure LS, T2: <#PE>(Meas) = 1004, <#PE>(Sim) = 1186 (fitted)
  210 MeV, Pure LS, T2: <#PE>(Meas) = 2677, <#PE>(Sim) = 2970 (fitted)

- KS/Chi2 test testing: I cannot scale the measured data and I must normalise
  the simulated data to the measurements. It appears to work.

2015-1-8
- Testing with light yield 110 Ph/MeV @ 475 MeV, 1% scint -> <#PE>~17.
  -> This now higher than the measured 15.7 value.
  107 Ph/MeV -> 16.3 PE
  105 Ph/MeV -> 16.9 PE
-> Further investigation has revealed that I fucked up the original run; I used
   a beam height of 0.75 cm, instead of 1.5!
   -> Running again, again!

- An even closer investigation has revealed that my 'average' values of # PE
  were skewed by 0 PE events and large amplitude events! What I need to do is
  impose a limitation that # PE > 0 and # PE < 14 (a decent cutoff). Then I can
  either take a mean or bin into histograms and run a Chi2 or KS test. I really
  should take longer runs also.
  -> For the record; with my current data get:
     BeamHgt = 1 cm, <#PE> = 2.74, Chi2 pval = 0.20 (visually appears too few)
     BeamHgt = 1.5 cm, <#PE> = 3.73, Chi2 pval = 0.027 (visually appears too
     many PE)

2015-1-9
- I've also realised that my comparison for 2 GeV on Water in T2 is had 
  incorrect binning (I need to centre the bins on the integer # PE). Chi2 test
  is probably the best comparison too... New Bins: # bins = 13, Start = 0.5,
  Stop = 13.5.
- Higher quality beam height scan from 1--1.5 cm. Using 1--14 PE range only.
  - Measured: <#PE> = 3.19.
  - 1 cm: <#PE> = 2.78, Chi2 pVal = 0.065, Chi2/NDF = 20.1/12, KS pVal = 0.001.
  - 1.1 cm:<#PE>= 2.97, Chi2 pVal = 0.555, Chi2/NDF = 10.7/12, KS pVal = 0.068.
  - 1.2 cm:<#PE>= 3.24, Chi2 pVal = 0.957, Chi2/NDF = 5.04/12, KS pVal = 0.944.
  - 1.3 cm:<#PE>= 3.31, Chi2 pVal = 0.740, Chi2/NDF = 8.56/12, KS pVal = 0.485.
- Excluding 1 PE from analysis (due to potential algorithm threshold effect) for
  a bin range of # bins = 12, Start = 1.5, Stop = 13.5:
  - Measured: <#PE> = 3.90
  - 1 cm: <#PE> = 3.68, Chi2 pVal = 0.759, Chi2/NDF = 7.48/11, KS pVal = 0.218.
  - 1.1 cm:<#PE>= 3.91, Chi2 pVal = 0.996, Chi2/NDF = 2.41/11, KS pVal = 1.00.
  - 1.2 cm:<#PE>= 4.10, Chi2 pVal = 0.980, Chi2/NDF = 3.60/11, KS pVal = 0.578.
  - 1.3 cm:<#PE>= 4.16, Chi2 pVal = 0.738, Chi2/NDF = 7.72/11, KS pVal = 0.158.

- Depending on whether you use [0.5-13.5] or [1.5,13.5] range, the optimal beam
  height is 1.211 or 1.146 cm, respectively. I'm just going to go with 1.2 cm.

- Running again, this time with the Birk's quenching set to 0 (off), at 1.2 cm.

- Added capability to change light yield manually in a script.

- Simultaneously working locally on my Ubuntu desktop to investigate the effect
  of changing the light yield of the 0.4% and 100% LS data.
  -> 475 MeV, 0.4% WbLS: The measured data appear weird. They are peaked at
     ~ 1.3 PE, and tail off so that the mean is ~ 4 PE. There is no clear
     gaussian-like peak for fitting. This distribution shape cannot be
     reproduced by the simulation; no matter what light yield is used. One would
     think were it simply Poisson statistics (albeit broadened) then there would
     be a light yield that at least approximates the measured shape; but all
     simulations with a light yield that is close show a clear gaussian-like
     peak.
     Possible causes:
     -> The Single PE calibration is wrong? Looking at data out of coincidence
     	with the expected pulse arrival time gives a single PE of ~137
	(currently 128). This shifts the peak back to ~1.1 PE but the shape
	still seems a bit off.
     -> Perhaps there was (for whatever reason) a larger proportion of 2 proton
     	events in this run. This could distort the spectrum. I'll can look for
	such an excess population in the (uncut) T1 data.
	-> The 2 GeV and 475 MeV data appear to have similar proportions of
	   2 proton events (both ~3.5% based on the peak heights).
	-> Also, trying to impose an upper level QDC cut on the hodoscopes (to
	   eliminate 2 proton events) doesn't clean up the spectrum.

  -> 2 GeV, 0.4% WbLS:
     - A light yield of 20 ph/MeV (half of what you'd expect from scaling) is
       gives too many PE (fitted mean of 18.7 vs measured 17.2).
     - A light yield of 15 ph/MeV is close to the mark (fitted 17.5 vs 17.2).

  -> 210 MeV, 0.4% WbLS:
     - A light yield of 15 ph/MeV gives a result that is suspiciously close to
       that expected from the measurements (5.3 +/- 0.7 simulated vs meas 5.3).

  - So for 475 MeV it appears that ~ 15 ph/MeV is the best estimate.
    Interestingly, this is what you'd expect from scaling the 210 MeV <#PE>
    (suggests no quenching)!

  - Pure LS, 475 MeV:
    I'll first try the trick of scaling the 210 MeV results; which predicts a
    light yield change from 10500 to 9459 ph/MeV. I'll round to 9460: a quick 
    run suggests I'm still a fair way off; 1196 vs measured 1004.
    For the record; the Daya Bay code (as sent by Elizabeth) uses a light yield
    of 11522 ph/MeV!
    9000 ph/MeV: <#PE>~1091.
    8900 ph/MeV: <#PE>~1078.
    8300 ph/MeV: <#PE>~985.
    8500 ph/MeV: <#PE>~994.

2014-1-11
- Measured values with optimal binning:
  1% WbLS, 2 GeV: <#PE> = 28.29
  PureLS, 2 GeV: <#PE> = 667.

  Run with 1.2 cm beam height, 105 ph/MeV (scaled) light yield:
  1% WbLS, 2 GeV: <#PE> = 27.79, Chi2 pVal = 0.002, Chi2 = 65, KS pVal = 0.004.
  ...This is very slow; I'll finish the rest of the analysis when I'm at work
  again...
  ....I've also realised that the # of simulated events in this run was
  incorrect: because I started with 2000; when I did my global replace from 2000
  to 475, in the file; the # events changed with it! 2 GeV events should be ok.
  PureLS events should all be ok too....
  Pure LS, ~10500 ph/MeV, 2 GeV: <#PE> = 877 (way off).

- Going to run some more with the near-optimised light yields in 0.4% WbLS and
  pure LS; 0.4% WbLS LY = 15 ph/MeV, pure LS = 8500 ph/MeV.

2014-1-12
- Measured values with optimal binning:
  1% WbLS, 2 GeV: <#PE> = 28.3.
  1% WbLS, 475 MeV: <#PE> = 16.38.
  1% WbLS, 210 MeV: <#PE> = 29.6.
  0.4% WbLS, 2 GeV: <#PE> = 17.5.
  0.4% WbLS, 475 MeV: <#PE> = 4.27. (Funny shape).
  0.4% WbLS, 210 MeV: <#PE> = 5.56.
  Pure LS, 2 GeV: <#PE> = 658 (multiplied by 5x attenuation factor)
  Pure LS, 475 MeV: <#PE> = 991 (multiplied by 5x attenuation factor)
  Pure LS, 210 MeV: <#PE> = 2934 (multiplied by 5x attenuation factor)
  Simulation, 1.2 cm beam height:
  1% WbLS, 105 ph/MeV, no quench:
  2 GeV: <#PE> = 27.8, Chi2/NDF = 64.4/36, pVal = 0.002, KS pVal = 0.16
  475 MeV: <#PE> = 16.69, Chi2/NDF = 94.2/30, pVal = 1E-8, KS pVal = 0.002
  210 MeV: <#PE> = 42.7, Chi2/NDF = 559/61, pVal = 1E-81, KS pVal = 0.0.
  0.4% WbLS, 15 ph/MeV, no quench:
  2 GeV: <#PE> = 17.8, Chi2/NDF = 58.4/32, pVal = 0.003, KS pVal = 0.23
  475 MeV: <#PE> = 3.43, Chi2/NDF = 189/15, pVal = 4E-32, KS pVal = 2E-12.
  210 MeV: <#PE> = 6.54, Chi2/NDF = 80/20, pVal = 4E-9, KS pVal = 2E-11.
  Pure LS, 8500 ph/MeV, no quench:
  2 GeV: <#PE> = 693, Chi2/NDF = 24.1/21, pVal = 0.29, KS pVal = 0.008.
  475 MeV: <#PE> = 1002, Chi2/NDF = 11.5/25, pVal = 0.99, KS pVal = 0.98.
  210 MeV: <#PE> = 2932, Chi2/NDF = 41.4/39, pVal = 0.36, KS pVal = 0.10.

- Why are there so few events in the pure LS runs?
  -> Applying cuts sequentially suggests that most events are lost when the
     hodoscope time/charge cuts are applied. So maybe the beam was not well
     focussed on the hodoscope? Maybe the hodoscope was misaligned from the
     beam centre?
     -> No, the relative proportion of hodoscope/veto events looks similar in
     	pure LS and 1% LS at 475 MeV.
  -> I've fixed this issue; see my notes in lbignell/NSRLanalysis/12C/README.
     It turns out that I wasn't reading the trees correctly (I was imposing a
     requirement that the first peak in the waveform make the cut). It didn't
     bias the analysis but it did cut out ~ half of the data for the WbLS
     samples. For the Pure LS samples it cut out ~95% of the data!	

- Results that have been processed using the better cut algorithm are stored in
  AllResults.root as histograms.
  -> Using data to take another look at the single PE calibration.
     -> It may be off; going back and re-analysing the new cut data in more
     	detail.
     -> I was fairly close; both a few % higher. The new values are:
     	T2 (using 475 MeV water) = 133.29 +/- 2.51 (was 128).
	T1 (using 210 MeV water) = 115.05 +/- 3.33 (was 112).

2014-1-14
- New analysis of beam height:
  - I set the analysis range [1.5,19.5] PE to exclude low # PE effects.
  Data: <#PE> = 3.98
  0.95 cm: Chi2 = 15.07, NDF = 17, pVal = 0.59, KS pVal = 3E-8
  1 cm: Chi2 = 15.42, NDF = 17, pVal = 0.57, KS pVal = 2E-5
  1.05 cm: Chi2 = 15.08, NDF = 17, pVal = 0.59, KS pVal = 1E-4
  1.075 cm: Chi2 = 7.423, NDF = 17, pVal = 0.74, KS pVal = 0.01
  1.1 cm: Chi2 = 11.57, NDF = 17, pVal = 0.83, KS pVal = 0.006
  1.15 cm: Chi2 = 19.66, NDF = 17, pVal = 0.29, KS pVal = 0.16
  1.2 cm: Chi2 = 31.2, NDF = 17, pVal = 0.02, KS pVal = 0.009
  1.3 cm: Chi2 = 43.4, NDF = 17, pVal = 4E-4, KS pVal = 1E-4
  - Changed analysis range to [1.5, 10.5] to only include bins with good stats.
  Data: <#PE> = 3.628
  0.95 cm: Chi2 = 8.585, NDF = 8, pVal = 0.37, KS pVal = 0.48
  1 cm: Chi2 = 9.83, NDF = 8, pVal = 0.28, KS pVal = 2E-5
  1.05 cm: Chi2 = 7.789, NDF = 8, pVal = 0.454, KS pVal = 0.49
  1.1 cm: Chi2 = 9.19, NDF = 8, pVal = 0.33, KS pVal = 0.006
  1.15 cm: Chi2 = 13.6, NDF = 8, pVal = 0.09, KS pVal = 0.16
  1.2 cm: Chi2 = 29.74, NDF = 8, pVal = 2E-4, KS pVal = 0.009
  1.3 cm: Chi2 = 40.15, NDF = 8, pVal = 3E-6, KS pVal = 1E-4
  -> Looking at the Chi2 plot, it doesn't look very parabola-like: perhaps I
     should take data at different heights? Looking at the spectra themselves,
     it does appear that 1.1 cm is the best fit. Maybe I should take some extra
     data at 0.95 cm, 1.05 cm, and 1.15 cm to make a nicer plot? Done (added 
     data above).

2015-1-16
- I have issues with the analysis above; it appears that I didn't correctly
  rebin the data histogram in at least some cases. Reanalysing:
  - Range = [1.5,19.5]
  Data: <#PE> = 3.98
  0.95 cm: Chi2 = 15.07, NDF = 17, pVal = 0.59
  1 cm: Chi2 = 15.42, NDF = 17, pVal = 0.57
  1.05 cm: Chi2 = 15.08, NDF = 17, pVal = 0.59
  1.075 cm: Chi2 = 12.91, NDF = 17, pVal = 0.74
  1.1 cm: Chi2 = 11.57, NDF = 17, pVal = 0.83
  1.125 cm: Chi2 = 20.46, NDF = 17, pVal = 0.25
  1.15 cm: Chi2 = 19.66, NDF = 17, pVal = 0.29
  1.175 cm: Chi2 = 18.22, NDF = 17, pVal = 0.38
  1.2 cm: Chi2 = 31.20, NDF = 17, pVal = 0.02
  1.225 cm: Chi2 = 22.43, NDF = 17, pVal = 0.17
  1.3 cm: Chi2 = 42.04, NDF = 17, pVal = 4E-4
  - Range = [1.5,10.5] (avoid low statistics bins)
  Data: <#PE> = 3.628
  0.95 cm: Chi2 = 8.585, NDF = 8, pVal = 0.37
  1 cm: Chi2 = 9.789, NDF = 8, pVal = 0.28
  1.05 cm: Chi2 = 7.789, NDF = 8, pVal = 0.454
  1.075 cm: Chi2 = 6.745, NDF = 8, pVal = 0.56
  1.1 cm: Chi2 = 9.18, NDF = 8, pVal = 0.33
  1.125 cm: Chi2 = 14.15, NDF = 8, pVal = 0.08
  1.15 cm: Chi2 = 13.58, NDF = 8, pVal = 0.09
  1.175 cm: Chi2 = 13.97, NDF = 8, pVal = 0.08
  1.2 cm: Chi2 = 29.66, NDF = 8, pVal = 2E-4
  1.225 cm: Chi2 = 18.92, NDF = 8, pVal = 0.02
  1.3 cm: Chi2 = 40.07, NDF = 8, pVal = 3E-6
  - Range: [1.5, 6.5] (avoid multiple proton events).
  Data: <#PE> = 
  0.95 cm: Chi2 = 8.16, NDF = 4, pVal = 0.09
  1 cm: Chi2 = 9.62, NDF = 4, pVal = 0.05
  1.05 cm: Chi2 = 6.55, NDF = 4, pVal = 0.16
  1.075 cm: Chi2 = 4.02, NDF = 4, pVal = 0.40
  1.1 cm: Chi2 = 7.44, NDF = 4, pVal = 0.11
  1.125 cm: Chi2 = 12.47, NDF = 4, pVal = 0.01
  1.15 cm: Chi2 = 10.36, NDF = 4, pVal = 0.03
  1.175 cm: Chi2 = 9.92, NDF = 4, pVal = 0.04
  1.2 cm: Chi2 = 21.6, NDF = 4, pVal = 2E-4
  1.225 cm: Chi2 = 9.39, NDF = 4, pVal = 0.05
  1.3 cm: Chi2 = 28.89, NDF = 4, pVal = 8E-6
  - I don't fully understand why Chi2 is non-parabola-like for much of its
    range. However, it appears that a beam height of 1.075 cm is about the right
    value.

- Going to run again over all scintillator concentrations; using ~optimal light
  yields of 105 ph/MeV for 1% WbLS; 15 ph/MeV for 0.4%, and 8400 ph/MeV for LS.

- Checking out the quenching:
  I think I'll need to scan Birks constant; doing short runs to get an idea:
  - 1% WbLS; 210 MeV, over range [5,55]:
    Data: <#PE> = 27.48
    kB = 0.125: <#PE> = 33.68
    kB = 0.2: <#PE> = 31.45
    kB = 0.3: <#PE> = 28.27
    kB = 0.5: <#PE> = 23.61
    - Interpolation would suggest a value of ~0.33.
    - I'll do a weekend run with kB = 0.1 -> 0.5 @ intervals of 0.025; 17 runs.
  - 0.4% WbLS; 210 MeV, over range [1,30].
    Data: <#PE> = 4.836
    kB = 0: <#PE> = 6.23 (fitted a gaussian to this range).
    kB = 0.1: <#PE> = 5.470
    kB = 0.2: <#PE> = 4.856
    kB = 0.3: <#PE> = 4.623
    kB = 0.4: <#PE> = 4.156
    None of the kB values give a great fit to the distribution shape (similar
    problem to the 475 MeV 0.4% data, though less severe).
    I think I'll run over w/e with kB = 0.1 -> 0.5 @ intervals of 0.025; 17 runs
  - Pure LS; 210 MeV, over range [1000, 5000]
    Data: <#PE> = 2777
    kB = 0: <#PE> = 2651 (VERY low statistics!)
    kB = 0.2: <#PE> = 2337 (VERY low statistics!)
    These take a very long time to complete. I think I'll run over the w/e with
    kB = 0.1 -> 0.4 @ intervals of 0.05 mm/MeV.

    -> Running on Ubuntu desktop over weekend.
    Results:
    1% WbLS; 210 MeV; over range [5.5,55.5]
    Data: <#PE> = 28.92.
    kB = 0.1 cm/MeV: <#PE> = 33.67, Chi2 = 880, NDF = 40, pVal = 1E-160
    kB = 0.15 cm/MeV: <#PE> = 32.25, Chi2 = 587, NDF = 40, pVal = 3E-98
    kB = 0.2 cm/MeV: <#PE> = 30.24, Chi2 = 316, NDF = 40, pVal = 1E-44
    kB = 0.25 cm/MeV: <#PE> = 28.54, Chi2 = 118.9, NDF = 40, pVal = 1E-9
    kB = 0.275 cm/MeV: <#PE> = 28.12, Chi2 = 85.9, NDF = 40, pVal = 3E-5
    kB = 0.3 cm/MeV: <#PE> = 27.45, Chi2 = 118.9, NDF = 40, pVal = 1E-9
    kB = 0.325 cm/MeV: <#PE> = 26.88, Chi2 = 94.75, NDF = 40, pVal = 2E-6
    kB = 0.35 cm/MeV: <#PE> = 26.27, Chi2 = 97.89. NDF = 40, pVal = 9E-7
    kB = 0.375 cm/MeV: <#PE> = 25.75, Chi2 = 171.22, NDF = 40, pVal = 4E-18
    kB = 0.4 cm/MeV: <#PE> = 24.85, Chi2 = 229.1, NDF = 40, pVal = 2E-28
    // This is taking too long: I'm writing a script... done.
    Script output: Chi2 is parabola-like. Depending on where the limits for the
    fit are taken, the optimal value is ~0.31(close limits)--0.325(wide limits).
    I can do longer simulation runs, but first I'll do a run @ 2 GeV/475 MeV
    with this kB value.
    -> Applying Gaussian smearing to the simulated results removed some of the
       bumpiness from the result; the fit now looks OK for an optimal value
       equal to 0.329 mm/MeV. Chi2 fit coefficients: const = 1978.79 +/- 54,
       linear = -11562.5 +/- 399.7, quadratic = 17575.2 +/- 655.4.

    0.4% WbLS; 210 MeV...
    The shape of the distribution isn't a great match for the shapes I get with
    the simulated distribution (the simulated distributions are too 'peaked').
    It is possible that this is due to the Gaussian smearing of the real data,
    which is not implemented in the simulated data. Based on the fit to the
    single PE; it appears that the sigma for Gaussian smearing is ~0.32. This
    means that (for 1 PE binning) very little gets spilled over to the next bin.
    However, when 2 Gaussians are convolved, the resulting Gaussian has a sigma
    equal to the sqrt of the sum of the sigma squared components. So 2 PE has
    a width of sqrt(2)*0.32 = 0.45, 3 PE sigma = sqrt(3)*0.32 = 0.55,
    4 PE sigma = 0.64, 5 PE sigma = 0.72, etc.
    Adding Gassian smearing definitely broadens the distribution for low numbers
    of PE (without greatly affecting at least the ~28 PE 1%@210MeV shape).
    -> Alas, not enough to make a convincing fit. Looking at the Chi2 vs kB, the
       lower values of kB do best (0.1 gives best fit). I could look at lower kB
       values...
    -> Looking at raw waveforms: the algorithm appears to be working OK.

2015-1-21
- Results so far:
  - Excellent agreement for 1% WbLS.
  - Good agreement for 0.4% WbLS @ 2 GeV. The distribution shapes for 475 MeV
    and 210 MeV are wierd and don't look Poisson-like. The simulated data do.
  - Good agreement for pure LS data; but simulations take a long time.

- Added capability to set output file name in a Geant4 macro, so I can do
  multiple runs simultaneously. The new default filename is Edep_.root.

- 2 GeV, kB = 0.329, LY = 105 ph/MeV
  -> The fit looks great... but ~ 1 PE too low.

- My plan:
  - Why are the 0.4% WbLS results not nice??
  - Ideally, it would be nice to perform an optimisation on kB and the light
    yield.
  - I can also switch the T1 reflectance model back (nope, I'm giving up on
    that...).
    -> Rewrite the code so that optical physics isn't implemented in T1 (that
       should speed things up!). Done (untested).
  - Once I've settled the optimisation question and the T1 reflectance question,
    I can write up my paper!
